/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;

import Admin.Services;
import Includes.Database;
import Includes.SHA;
import javax.swing.JCheckBox;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author HansiPC
 */
public class AddNewAdmin extends javax.swing.JFrame {

    private JCheckBox[] permissions;
    private String adminUsername, editUserName;
    private boolean newAdmin;

    /**
     * Creates new form RegisterAdmin
     */
    public AddNewAdmin(String username) {
        adminUsername = username;
        newAdmin = true;
        initWindow();
    }

    public AddNewAdmin(String username, String editUser) {
        adminUsername = username;
        editUserName = editUser;
        newAdmin = false;
        initWindow();
        initTextFirlds(editUser);
    }

    private void initWindow() {
        this.setUndecorated(true);
        this.setAlwaysOnTop(true);
        this.setResizable(false);
        this.setVisible(true);
        initComponents();
        this.setSize(890, 570);
        this.setLocationRelativeTo(null);
        this.name.requestFocusInWindow();
        viewPermittedPermissionButtons();
    }

    private void viewPermittedPermissionButtons() {
        permissions = new JCheckBox[]{searchCustomer, addNewAdmin,
            assingBus, deleteTurn, transHistory, addNewBus,
            editBus, addNewRout, editRout, finalizeTurns, viewAllHistory,
            editPermissions, editAdminProfile, companyProfile};

        try {
            for (JCheckBox x : permissions) {
                x.setVisible(false);
            }
            Connection con = Database.getConnected();
            String query = "SELECT * FROM admin_login WHERE user_name='" + adminUsername + "'";
            ResultSet rs = Database.executeQuery(con, query);
            rs.next();
            String permissionsList = rs.getString(7);

            for (int i = 0; i < permissions.length; i++) {
                if (permissionsList.matches("(.*)-" + Integer.toString(i) + "-(.*)")) {
                    permissions[i].setVisible(true);
                }
            }

        } catch (SQLException | ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        nicNo = new javax.swing.JTextField();
        mobileNo = new javax.swing.JTextField();
        userName = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        verifyPassword = new javax.swing.JPasswordField();
        back = new javax.swing.JButton();
        ok = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        searchCustomer = new javax.swing.JCheckBox();
        addNewAdmin = new javax.swing.JCheckBox();
        assingBus = new javax.swing.JCheckBox();
        deleteTurn = new javax.swing.JCheckBox();
        transHistory = new javax.swing.JCheckBox();
        addNewBus = new javax.swing.JCheckBox();
        editBus = new javax.swing.JCheckBox();
        addNewRout = new javax.swing.JCheckBox();
        editRout = new javax.swing.JCheckBox();
        finalizeTurns = new javax.swing.JCheckBox();
        viewAllHistory = new javax.swing.JCheckBox();
        editPermissions = new javax.swing.JCheckBox();
        editAdminProfile = new javax.swing.JCheckBox();
        companyProfile = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Full Name                                 :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(50, 100, 188, 28);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Email                                        :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 140, 188, 32);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NIC No                                      :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(50, 190, 188, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mobile No                                :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 230, 188, 32);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("User Name                              :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(50, 270, 188, 34);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Password                                 :");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(50, 300, 188, 36);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Comfirm password                :");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(50, 330, 188, 31);

        name.setBackground(new java.awt.Color(0, 255, 255));
        name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        name.setNextFocusableComponent(email);
        getContentPane().add(name);
        name.setBounds(250, 100, 279, 31);

        email.setBackground(new java.awt.Color(204, 255, 255));
        email.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        email.setNextFocusableComponent(nicNo);
        getContentPane().add(email);
        email.setBounds(250, 140, 279, 31);

        nicNo.setBackground(new java.awt.Color(0, 255, 255));
        nicNo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nicNo.setNextFocusableComponent(mobileNo);
        getContentPane().add(nicNo);
        nicNo.setBounds(250, 180, 279, 31);

        mobileNo.setBackground(new java.awt.Color(204, 255, 255));
        mobileNo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        mobileNo.setNextFocusableComponent(userName);
        getContentPane().add(mobileNo);
        mobileNo.setBounds(250, 220, 279, 31);

        userName.setBackground(new java.awt.Color(0, 255, 255));
        userName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userName.setNextFocusableComponent(password);
        getContentPane().add(userName);
        userName.setBounds(250, 260, 279, 31);

        password.setBackground(new java.awt.Color(204, 255, 255));
        password.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        password.setNextFocusableComponent(verifyPassword);
        getContentPane().add(password);
        password.setBounds(250, 300, 279, 31);

        verifyPassword.setBackground(new java.awt.Color(0, 255, 255));
        verifyPassword.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        verifyPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyPasswordActionPerformed(evt);
            }
        });
        getContentPane().add(verifyPassword);
        verifyPassword.setBounds(250, 340, 279, 31);

        back.setBackground(new java.awt.Color(0, 0, 153));
        back.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        back.setForeground(new java.awt.Color(0, 255, 255));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(180, 460, 100, 30);

        ok.setBackground(new java.awt.Color(0, 0, 153));
        ok.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ok.setForeground(new java.awt.Color(0, 255, 255));
        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        getContentPane().add(ok);
        ok.setBounds(420, 460, 100, 30);

        clear.setBackground(new java.awt.Color(0, 0, 153));
        clear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        clear.setForeground(new java.awt.Color(0, 255, 255));
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear);
        clear.setBounds(300, 460, 100, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Giving permissions for");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(570, 60, 170, 30);

        searchCustomer.setBackground(new java.awt.Color(204, 255, 255));
        searchCustomer.setText("Search Customer");
        getContentPane().add(searchCustomer);
        searchCustomer.setBounds(570, 90, 190, 23);

        addNewAdmin.setBackground(new java.awt.Color(0, 255, 255));
        addNewAdmin.setText("Add New Admin");
        getContentPane().add(addNewAdmin);
        addNewAdmin.setBounds(570, 110, 190, 23);

        assingBus.setBackground(new java.awt.Color(204, 255, 255));
        assingBus.setText("Assing a Bus");
        getContentPane().add(assingBus);
        assingBus.setBounds(570, 130, 190, 23);

        deleteTurn.setBackground(new java.awt.Color(0, 255, 255));
        deleteTurn.setText("deleteTurn");
        getContentPane().add(deleteTurn);
        deleteTurn.setBounds(570, 150, 190, 23);

        transHistory.setBackground(new java.awt.Color(204, 255, 255));
        transHistory.setText("Trans History");
        getContentPane().add(transHistory);
        transHistory.setBounds(570, 170, 190, 23);

        addNewBus.setBackground(new java.awt.Color(0, 255, 255));
        addNewBus.setText("Add New Bus");
        getContentPane().add(addNewBus);
        addNewBus.setBounds(570, 190, 190, 23);

        editBus.setBackground(new java.awt.Color(204, 255, 255));
        editBus.setText("Edit Bus");
        getContentPane().add(editBus);
        editBus.setBounds(570, 210, 190, 23);

        addNewRout.setBackground(new java.awt.Color(0, 255, 255));
        addNewRout.setText("Add New Rout");
        getContentPane().add(addNewRout);
        addNewRout.setBounds(570, 230, 190, 23);

        editRout.setBackground(new java.awt.Color(204, 255, 255));
        editRout.setText("Edit Rout");
        getContentPane().add(editRout);
        editRout.setBounds(570, 250, 190, 23);

        finalizeTurns.setBackground(new java.awt.Color(0, 255, 255));
        finalizeTurns.setText("Finalize Turns");
        getContentPane().add(finalizeTurns);
        finalizeTurns.setBounds(570, 270, 190, 23);

        viewAllHistory.setBackground(new java.awt.Color(204, 255, 255));
        viewAllHistory.setText("View All History");
        getContentPane().add(viewAllHistory);
        viewAllHistory.setBounds(570, 290, 190, 23);

        editPermissions.setBackground(new java.awt.Color(0, 255, 255));
        editPermissions.setText("Edit Admin Permissions");
        getContentPane().add(editPermissions);
        editPermissions.setBounds(570, 310, 190, 23);

        editAdminProfile.setBackground(new java.awt.Color(204, 255, 255));
        editAdminProfile.setText("Edit Admin Profile");
        getContentPane().add(editAdminProfile);
        editAdminProfile.setBounds(570, 330, 190, 23);

        companyProfile.setBackground(new java.awt.Color(0, 255, 255));
        companyProfile.setText("Modify Company Profile");
        getContentPane().add(companyProfile);
        companyProfile.setBounds(570, 350, 190, 23);

        jLabel9.setBackground(new java.awt.Color(0, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/125.jpg"))); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(0, 0, 890, 570);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        if (newAdmin) {
            boolean[] checkInputs;
            checkInputs = checkFields();
            if (checkInputs[0]) {
                try {
                    String name1 = name.getText();
                    String email1 = email.getText();
                    int mobile1 = Integer.parseInt(mobileNo.getText());
                    String nic1 = nicNo.getText();
                    String userName1 = userName.getText();
                    String password1 = String.valueOf(password.getPassword());
                    String password2 = String.valueOf(verifyPassword.getPassword());
                    String permissionList = " ";
                    for (int i = 0; i < permissions.length; i++) {
                        if (permissions[i].isSelected()) {
                            permissionList += "-" + i + "- ";
                        }
                    }
                    if (password1.equals(password2)) {
                        boolean flag = registerAdmin(name1, mobile1, email1, nic1, userName1, password1, permissionList);
                        if (!flag) {
                            JOptionPane.showMessageDialog(this, "Error! Try again "
                                    + "with correct data");
                        } else {
                            JOptionPane.showMessageDialog(this, "Admin added successfully!");
                            Services x = new Services(adminUsername);
                            x.setVisible(true);
                            this.dispose();
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Please enter correct password!");
                        password.setText("");
                        verifyPassword.setText("");
                    }
                } catch (Exception e) {
                }

            } else if (checkInputs[1]) {
                JOptionPane.showMessageDialog(this, "Please fill all the fields with valid data!");
            }
        } else {
            String permissionList = " ";
            for (int i = 0; i < permissions.length; i++) {
                if (permissions[i].isSelected()) {
                    permissionList += "-" + i + "- ";
                }
            }
            try {
                Connection con = Database.getConnected();
                String querry = "UPDATE `admin_login` SET `permissions`='"
                        + permissionList + "' WHERE user_name='" + editUserName
                        + "'";
                if (Database.updateQuery(con, querry) == 1) {
                    JOptionPane.showMessageDialog(this, "Data updated succesfully");
                    Services x = new Services(adminUsername);
                    x.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Error in updating details");
                }
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_okActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        Services x = new Services(adminUsername);
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        name.setText("");
        email.setText("");
        nicNo.setText("");
        userName.setText("");
        mobileNo.setText("");
        password.setText("");
        verifyPassword.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void verifyPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyPasswordActionPerformed
        okActionPerformed(evt);
    }//GEN-LAST:event_verifyPasswordActionPerformed

    private boolean[] checkFields() {
        boolean[] flag = new boolean[2];
        flag[0] = true;
        flag[1] = true;

        if (name.getText().equals("")) {
            flag[0] = false;
        }
        if (userName.getText().equals("")) {
            flag[0] = false;
        }

        if (email.getText().equals("")) {
            flag[0] = false;
        } else {
            try {
                String[] emailParts = email.getText().split("@");
                if (emailParts.length != 2) {
                    flag[0] = false;
                    flag[1] = false;
                    JOptionPane.showMessageDialog(this, "Invalid email.");
                }
            } catch (Exception ex) {
                flag[0] = false;
                flag[1] = false;
                JOptionPane.showMessageDialog(this, "Invalid email.");
            }
        }

        if (mobileNo.getText().equals("")) {
            flag[0] = false;
        } else if (mobileNo.getText().length() != 10) {
            flag[0] = false;
            flag[1] = false;
            JOptionPane.showMessageDialog(this, "Length of Mobile shold be 10 digits");
        } else {
            try {
                int number = Integer.parseInt(mobileNo.getText());
            } catch (Exception ex) {
                flag[0] = false;
                flag[1] = false;
                JOptionPane.showMessageDialog(this, "Enter a valied phone number");
            }
        }

        if (nicNo.getText().equals("")) {
            flag[0] = false;
        }

        if (password.getPassword().equals("")) {
            flag[0] = false;
        }

        if (verifyPassword.getPassword().equals("")) {
            flag[0] = false;
        }

        String permissionList = "";
        for (int i = 0; i < permissions.length; i++) {
            if (permissions[i].isSelected()) {
                permissionList += i + "";
            }
        }

        if (permissionList.equals("") && flag[0]) {
            flag[0] = false;
            flag[1] = false;
            JOptionPane.showMessageDialog(this, "Select toggle buttons which you"
                    + " imply to gine permission for this new Admin");
        }
        return flag;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addNewAdmin;
    private javax.swing.JCheckBox addNewBus;
    private javax.swing.JCheckBox addNewRout;
    private javax.swing.JCheckBox assingBus;
    private javax.swing.JButton back;
    private javax.swing.JButton clear;
    private javax.swing.JCheckBox companyProfile;
    private javax.swing.JCheckBox deleteTurn;
    private javax.swing.JCheckBox editAdminProfile;
    private javax.swing.JCheckBox editBus;
    private javax.swing.JCheckBox editPermissions;
    private javax.swing.JCheckBox editRout;
    private javax.swing.JTextField email;
    private javax.swing.JCheckBox finalizeTurns;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField mobileNo;
    private javax.swing.JTextField name;
    private javax.swing.JTextField nicNo;
    private javax.swing.JButton ok;
    private javax.swing.JPasswordField password;
    private javax.swing.JCheckBox searchCustomer;
    private javax.swing.JCheckBox transHistory;
    private javax.swing.JTextField userName;
    private javax.swing.JPasswordField verifyPassword;
    private javax.swing.JCheckBox viewAllHistory;
    // End of variables declaration//GEN-END:variables

    private boolean registerAdmin(String name, int mobile, String email,
            String nic, String userName, String pass, String permissionList) {
        boolean flag = false;
        Connection con;
        int rs;
        String password = SHA.getSHAPassword(pass);
        try {
            con = Database.getConnected();
            String query = "INSERT INTO admin_login(name,  phone, "
                    + "email,nic_number,user_name, password, permissions) "
                    + "VALUES('" + name + "','" + mobile + "','" + email
                    + "','" + nic + "','" + userName + "','" + password
                    + "','" + permissionList + "')";
            rs = Database.updateQuery(con, query);
            if (rs == 1) {
                flag = true;
            }
        } catch (SQLException | ClassNotFoundException ex) {

        }
        return flag;
    }

    private void initTextFirlds(String editUser) {
        try {
            Connection con = Database.getConnected();
            String query = "SELECT * FROM admin_login WHERE user_name='" + editUser + "'";
            ResultSet rs = Database.executeQuery(con, query);
            rs.next();

            name.setText(rs.getString(1));
            email.setText(rs.getString(2));
            nicNo.setText(rs.getString(4));
            mobileNo.setText(rs.getString(3));
            userName.setText(rs.getString(5));
            for (int i = 0; i < permissions.length; i++) {
                if (rs.getString(7).matches("(.*)-" + Integer.toString(i) + "-(.*)")) {
                    permissions[i].setSelected(true);
                }
            }

            name.setEditable(false);
            email.setEditable(false);
            nicNo.setEditable(false);
            mobileNo.setEditable(false);
            userName.setEditable(false);
            password.setEnabled(false);
            verifyPassword.setEnabled(false);
            clear.setVisible(false);
            back.setVisible(false);

            searchCustomer.requestFocusInWindow();
        } catch (SQLException | ClassNotFoundException ex) {
            ex.printStackTrace();
        }

    }
}
