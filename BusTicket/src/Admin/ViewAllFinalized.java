/*
 * This is a program by K.G.Sampath Sandaruwan.
 * Smcmails@gmail.com
 * 0774471293
 * Sandaruwankgs.wordpress.com
 */
package Admin;

import Includes.Database;
import java.awt.Dimension;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 *
 * @author K.G.S.Sandaaruwan
 */
public class ViewAllFinalized extends javax.swing.JFrame {

    private String adminUsername;
    private String[][] allBookings;

    /**
     * Creates new form View
     */
    ViewAllFinalized(String username) {
        adminUsername = username;
        initWindow();
        setResultTable();
    }

    private void initWindow() {
        this.setUndecorated(true);
        initComponents();
        this.setSize(890, 570);
        this.setAlwaysOnTop(false);
        this.setResizable(false);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        busTable = new javax.swing.JTable();
        help = new javax.swing.JButton();
        back = new javax.swing.JButton();
        finalize = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        busTable.setBackground(new java.awt.Color(204, 255, 255));
        busTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seat", "From", "To", "By"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        busTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        busTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                busTableMouseClicked(evt);
            }
        });
        busTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                busTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(busTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 70, 824, 28);

        help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/help-icon.png"))); // NOI18N
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        getContentPane().add(help);
        help.setBounds(750, 10, 60, 60);

        back.setBackground(new java.awt.Color(0, 51, 153));
        back.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        back.setForeground(new java.awt.Color(0, 255, 255));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(40, 500, 100, 30);

        finalize.setBackground(new java.awt.Color(0, 51, 153));
        finalize.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        finalize.setForeground(new java.awt.Color(0, 255, 255));
        finalize.setText("View History");
        finalize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizeActionPerformed(evt);
            }
        });
        getContentPane().add(finalize);
        finalize.setBounds(710, 500, 150, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/125.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -6, 910, 570);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void busTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busTableKeyPressed
    }//GEN-LAST:event_busTableKeyPressed
    private void busTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_busTableMouseClicked

    }//GEN-LAST:event_busTableMouseClicked

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        String helpMsg;
        helpMsg = "Here you can Finalize your bus turn.\n\n";
        helpMsg += "If you finalized a bus turn, It will be still displayed to\n";
        helpMsg += "customers, and but they cant either book or edit seats in\n";
        helpMsg += "this turn.";
        JOptionPane.showMessageDialog(this, helpMsg);
    }//GEN-LAST:event_helpActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        Services x = new Services(adminUsername);
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    @SuppressWarnings("empty-statement")
    private void finalizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizeActionPerformed
        String input;
        try {
            DefaultTableModel dtm = (DefaultTableModel) busTable.getModel();
            input = dtm.getValueAt(busTable.getSelectedRow(), 0).toString();
        } catch (ArrayIndexOutOfBoundsException ex) {
            input = JOptionPane.showInputDialog(this, "Enter the Booking Number of the "
                    + "turn you going to view/finalize");
        }
        String msg = "No such booking number found";
        for (String[] allBooking : allBookings) {
            if (allBooking[0].equals(input)){
                msg  = "Booking Number   : " + allBooking[0];
                msg += "\nBus Number   : " + allBooking[1];
                msg += "\nDate   : " + allBooking[2];
                msg += "\nTime   : " + allBooking[3];
                msg += "\nStart   : " + allBooking[4];
                msg += "\nEnd   : " + allBooking[5];
                msg += "\nSeat Number   : " + allBooking[6];
                msg += "\nEmail   : " + allBooking[7];
                msg += "\nBooked In   : " + allBooking[8];
                break;
            }
        }
        
        JOptionPane.showMessageDialog(this, msg);
    }//GEN-LAST:event_finalizeActionPerformed

    private void setResultTable() {
        String[] header = {"Booking Number", "Bus Number", "Date", "Time", "Start",
            "End", "Seat Number", "Email", "Booked In"};
        DefaultTableModel dtm = new DefaultTableModel() {
            public boolean isCelEditable(int row, int coll) {
                return coll != 1;
            }
        };
        dtm.setColumnIdentifiers(header);
        busTable.setModel(dtm);

        try {
            allBookings = vieAllwFinalized();

            for (int i = 0; i < allBookings.length; i++) {
                int x = allBookings.length - 1;
                dtm.addRow(allBookings[x - i]);
                busTable.setModel(dtm);
            }
        } catch (SQLException | ClassNotFoundException ex) {
        }

        Dimension dim = busTable.getSize();
        int height = (busTable.getRowCount() * 16) + 26;
        if (height > 420) {
            height = 420;
        }
        jScrollPane1.setSize(dim.width, height);
    }

    private String[][] vieAllwFinalized()
            throws SQLException, ClassNotFoundException {
        Connection con;
        ResultSet rs;
        String query;
        String[][] results;

        con = Database.getConnected();
        query = "SELECT * FROM `booking_data`";
        rs = Database.executeQuery(con, query);
        int count;
        for (count = 0; rs.next(); count++) {
        }
        rs = Database.executeQuery(con, query);
        results = new String[count][9];
        for (int i = 0; rs.next(); i++) {
            results[i][0] = rs.getString(1);
            results[i][1] = rs.getString(2);
            results[i][2] = rs.getString(3);
            results[i][3] = rs.getString(4);
            results[i][4] = rs.getString(5);
            results[i][5] = rs.getString(6);
            results[i][6] = rs.getString(7);
            results[i][7] = rs.getString(8);
            results[i][8] = rs.getString(9);
        }
        Database.disconnect(con);
        return results;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTable busTable;
    private javax.swing.JButton finalize;
    private javax.swing.JButton help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
