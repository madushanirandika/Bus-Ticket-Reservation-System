/*
 * This is a program by K.G.Sampath Sandaruwan.
 * Smcmails@gmail.com
 * 0774471293
 * Sandaruwankgs.wordpress.com
 */
package Admin;

import Includes.Database;
import java.awt.Dimension;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 *
 * @author K.G.S.Sandaaruwan
 */
public class FinalizeBus extends javax.swing.JFrame {

    private String adminUsername;
    private String[][] importedBusTurnsList = null;
    private String[] busTurnIdList = null;

    /**
     * Creates new form View
     */
    public FinalizeBus(String username, String busNumber) {
        adminUsername = username;
        initWindow();
        searchBusTurns.setText(busNumber);
        setResultTable(busNumber);
    }

    private void initWindow() {
        this.setUndecorated(true);
        initComponents();
        this.setSize(890, 570);
        this.setAlwaysOnTop(true);
        this.setResizable(false);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.searchBusTurns.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        searchBusTurns = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        busTable = new javax.swing.JTable();
        viewAll = new javax.swing.JButton();
        help = new javax.swing.JButton();
        back = new javax.swing.JButton();
        editSeats = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Enter bus number to filter data if you want");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 10, 440, 14);

        searchBusTurns.setBackground(new java.awt.Color(0, 255, 255));
        searchBusTurns.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchBusTurns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBusTurnsActionPerformed(evt);
            }
        });
        getContentPane().add(searchBusTurns);
        searchBusTurns.setBounds(40, 30, 570, 30);

        search.setBackground(new java.awt.Color(0, 51, 153));
        search.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        search.setForeground(new java.awt.Color(0, 255, 255));
        search.setText("Go");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search);
        search.setBounds(640, 30, 90, 30);

        busTable.setBackground(new java.awt.Color(204, 255, 255));
        busTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Number", "From", "To", "Turn Id", "Is filled"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        busTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        busTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                busTableMouseClicked(evt);
            }
        });
        busTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                busTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(busTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 70, 824, 28);

        viewAll.setBackground(new java.awt.Color(0, 51, 153));
        viewAll.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        viewAll.setForeground(new java.awt.Color(0, 255, 255));
        viewAll.setText("View All");
        viewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllActionPerformed(evt);
            }
        });
        getContentPane().add(viewAll);
        viewAll.setBounds(380, 490, 110, 30);

        help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/help-icon.png"))); // NOI18N
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        getContentPane().add(help);
        help.setBounds(750, 10, 60, 60);

        back.setBackground(new java.awt.Color(0, 51, 153));
        back.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        back.setForeground(new java.awt.Color(0, 255, 255));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(50, 490, 110, 30);

        editSeats.setBackground(new java.awt.Color(0, 51, 153));
        editSeats.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        editSeats.setForeground(new java.awt.Color(0, 255, 255));
        editSeats.setText("Finalize / View bus turn");
        editSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSeatsActionPerformed(evt);
            }
        });
        getContentPane().add(editSeats);
        editSeats.setBounds(680, 490, 180, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/125.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 890, 570);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBusTurnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBusTurnsActionPerformed
        setResultTable(searchBusTurns.getText());
    }//GEN-LAST:event_searchBusTurnsActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        setResultTable(searchBusTurns.getText());
    }//GEN-LAST:event_searchActionPerformed

    private void busTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busTableKeyPressed
    }//GEN-LAST:event_busTableKeyPressed

    private void busTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_busTableMouseClicked

    }//GEN-LAST:event_busTableMouseClicked

    private void viewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllActionPerformed
        setResultTable(null);
        searchBusTurns.setText("");
    }//GEN-LAST:event_viewAllActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        String helpMsg;
        helpMsg = "All bus turns which are not Finalized will be displayed here\n";
        helpMsg += "and you can filter results using Bus_Number.\n\n";
        helpMsg += "Then you pick the Turn_Id value given by the system and then\n";
        helpMsg += "you can View or Finalize a Bus_Turn using that id.";
        JOptionPane.showMessageDialog(this, helpMsg);
    }//GEN-LAST:event_helpActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        Services x = new Services(adminUsername);
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    @SuppressWarnings("empty-statement")
    private void editSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSeatsActionPerformed
        int n = 0;
        String input;
        DefaultTableModel dtm = (DefaultTableModel) busTable.getModel();
        try {
            input = dtm.getValueAt(busTable.getSelectedRow(), 5).toString();
        } catch (ArrayIndexOutOfBoundsException ex) {
            input = JOptionPane.showInputDialog(this, "Enter the Turn_Id of the "
                    + "bus turn you going to view/finalize");
        }
        try {
            n = Integer.parseInt(input);
        } catch (Exception e) {
            n = 0;
        }
        if (n != 0) {
            for (int i = 0; i < importedBusTurnsList.length; i++) {
                if (n == Integer.parseInt(importedBusTurnsList[i][5])) {
                    String[] args = {busTurnIdList[i], importedBusTurnsList[i][2]};
                    ViewForFinalize x = new ViewForFinalize(adminUsername, args);
                    x.setVisible(true);
                    this.dispose();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Just enter the Turn_Id which shown in the table\n"
                    + "or click on a row in table to select that bus.");
        }
    }//GEN-LAST:event_editSeatsActionPerformed

    private void setResultTable(String searchKey) {
        String[] header = {"Date", "Time", "Number", "From", "To", "Turn Id", "Is Filled"};
        DefaultTableModel dtm = new DefaultTableModel() {
            public boolean isCelEditable(int row, int coll) {
                return coll != 1;
            }
        };
        dtm.setColumnIdentifiers(header);
        busTable.setModel(dtm);

        try {
            importedBusTurnsList = viewBusTurns(searchKey);
            for (String[] result : importedBusTurnsList) {
                dtm.addRow(result);
                busTable.setModel(dtm);
            }
        } catch (SQLException | ClassNotFoundException ex) {
        }

        Dimension dim = busTable.getSize();
        int height = (busTable.getRowCount() * 16) + 26;
        if (height > 344) {
            height = 344;
        }
        if (height > 420) {
            height = 420;
        }
        jScrollPane1.setSize(dim.width, height);
    }

    private String[][] viewBusTurns(String busNumber)
            throws SQLException, ClassNotFoundException {
        Connection con;
        ResultSet rs;
        String query;
        String[][] results;

        con = Database.getConnected();
        if (busNumber != null) {
            query = "SELECT * FROM bus_turns WHERE `bus_number`='" + busNumber.toUpperCase() + "'";
            rs = Database.executeQuery(con, query);
            if (!rs.next()) {
                query = "SELECT * FROM  bus_turns";
                JOptionPane.showMessageDialog(this, "No bus turns found which "
                        + "includes your bus");
                searchBusTurns.setText("");
            }
        } else {
            query = "SELECT * FROM  bus_turns";
        }
        rs = Database.executeQuery(con, query);
        int count = 0;
        while (rs.next()) {
            if (rs.getInt(8) != 2) {
                count++;
            }
        }
        rs = Database.executeQuery(con, query);
        results = new String[count][7];
        busTurnIdList = new String[count];
        for (int i = 0; rs.next(); i++) {
            if (rs.getInt(8) != 2) {
                results[i][0] = rs.getString(1);
                results[i][1] = rs.getString(2);
                results[i][2] = rs.getString(6);
                results[i][3] = rs.getString(4);
                results[i][4] = rs.getString(5);
                results[i][5] = rs.getString(7).substring(29);
                results[i][6] = (rs.getInt(8) == 0) ? "Not Filled" : "Filled";
                busTurnIdList[i] = rs.getString(7);
            } else {
                i--;
            }
        }
        Database.disconnect(con);
        return results;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTable busTable;
    private javax.swing.JButton editSeats;
    private javax.swing.JButton help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchBusTurns;
    private javax.swing.JButton viewAll;
    // End of variables declaration//GEN-END:variables
}
