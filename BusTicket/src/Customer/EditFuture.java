/*
 * This is a program by K.G.Sampath Sandaruwan.
 * Smcmails@gmail.com
 * 0774471293
 * Sandaruwankgs.wordpress.com
 */
package Customer;

import Includes.Database;
import java.awt.Dimension;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import java.util.Date;

/**
 *
 * @author K.G.S.Sandaaruwan
 */
public class EditFuture extends javax.swing.JFrame {

    private String customerEmail;
    private String[][][] importedFutureBookings = null;
    private String[] futureTurnsArray;

    /**
     * Creates new form View
     */
    public EditFuture(String email) {
        if (email != null) {
            initWindow();
            customerEmail = email;
            setResultTable(null);
        }
    }

    private void initWindow() {
        this.setUndecorated(true);
        initComponents();
        this.setSize(890, 570);
        this.setAlwaysOnTop(true);
        this.setResizable(false);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        Date d = new Date();
        date.setMinSelectableDate(d);
        date.setDateFormatString("yyyy/MM/dd");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        futureTable = new javax.swing.JTable();
        editData = new javax.swing.JButton();
        viewAll = new javax.swing.JButton();
        help = new javax.swing.JButton();
        back = new javax.swing.JButton();
        deleteBus = new javax.swing.JButton();
        date = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        search.setBackground(new java.awt.Color(0, 0, 0));
        search.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        search.setForeground(new java.awt.Color(102, 255, 0));
        search.setText("Go");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search);
        search.setBounds(350, 30, 90, 30);

        futureTable.setForeground(new java.awt.Color(153, 255, 0));
        futureTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "From", "To", "Bus", "Seat", "Bookimg Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        futureTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        futureTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                futureTableMouseClicked(evt);
            }
        });
        futureTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                futureTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(futureTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 70, 824, 28);

        editData.setBackground(new java.awt.Color(0, 0, 0));
        editData.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        editData.setForeground(new java.awt.Color(102, 255, 0));
        editData.setText("Edit Booking");
        editData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDataActionPerformed(evt);
            }
        });
        getContentPane().add(editData);
        editData.setBounds(470, 500, 140, 30);

        viewAll.setBackground(new java.awt.Color(0, 0, 0));
        viewAll.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        viewAll.setForeground(new java.awt.Color(102, 255, 0));
        viewAll.setText("View All");
        viewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllActionPerformed(evt);
            }
        });
        getContentPane().add(viewAll);
        viewAll.setBounds(180, 500, 110, 30);

        help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/help-icon.png"))); // NOI18N
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        getContentPane().add(help);
        help.setBounds(750, 20, 60, 40);

        back.setBackground(new java.awt.Color(0, 0, 0));
        back.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        back.setForeground(new java.awt.Color(102, 255, 0));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(50, 500, 110, 30);

        deleteBus.setBackground(new java.awt.Color(0, 0, 0));
        deleteBus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deleteBus.setForeground(new java.awt.Color(102, 255, 0));
        deleteBus.setText("Delete Booking");
        deleteBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBusActionPerformed(evt);
            }
        });
        getContentPane().add(deleteBus);
        deleteBus.setBounds(310, 500, 140, 30);

        date.setBackground(new java.awt.Color(153, 255, 0));
        getContentPane().add(date);
        date.setBounds(40, 30, 280, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter your date to filter results (yyyy/mm/dd)");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 10, 320, 14);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/03.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 910, 570);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String searchDate;
        try {
            Date d = date.getDate();
            searchDate = new SimpleDateFormat("yyyy/MM/dd").format(d);
            setResultTable(searchDate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Use Calendar button or Manually enter date in fromat YYYY/MM/DD");
            searchDate = null;
        }
    }//GEN-LAST:event_searchActionPerformed

    private void futureTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_futureTableKeyPressed
    }//GEN-LAST:event_futureTableKeyPressed

    private void editDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDataActionPerformed
        editDeleteData(true);
    }//GEN-LAST:event_editDataActionPerformed

    private void futureTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_futureTableMouseClicked
    }//GEN-LAST:event_futureTableMouseClicked

    private void viewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllActionPerformed
        setResultTable(null);
    }//GEN-LAST:event_viewAllActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        String helpMsg;
        helpMsg = "You can edit seat numbers only\n";
        JOptionPane.showMessageDialog(this, helpMsg);
    }//GEN-LAST:event_helpActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        StartBooking x = new StartBooking(customerEmail);
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void deleteBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBusActionPerformed
        editDeleteData(false);
    }//GEN-LAST:event_deleteBusActionPerformed

    private void editDeleteData(boolean edit) {
        String selectedBusTurnId = null;
        String selectedBookingNumber;
        String input;

        if (futureTable.isCursorSet()) {
            DefaultTableModel dtm = (DefaultTableModel) futureTable.getModel();
            input = dtm.getValueAt(futureTable.getSelectedRow(), 6).toString();
        } else {
            input = JOptionPane.showInputDialog(this, "Enter the Booking_"
                    + "Number of your ticket which you going to edit");
        }

        for (int i = 0; i < importedFutureBookings.length; i++) {
            for (String[] seatData : importedFutureBookings[i]) {
                if (seatData[6].equalsIgnoreCase(input)) {
                    selectedBusTurnId = futureTurnsArray[i];
                }
            }
        }
        selectedBookingNumber = input.toUpperCase();
        if (selectedBusTurnId != null) {
            EditFutureJournies x;
            x = new EditFutureJournies(customerEmail,
                    selectedBusTurnId, selectedBookingNumber, edit);
            x.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Entered booking number is wrong.\n"
                    + "Plese look carefully about data which shown in the\n"
                    + "table bellow and Try again");
        }
    }

    private void setResultTable(String date) {
        String[] header = {"Date", "Time", "From", "To", "Bus", "Seat", "Booking Number"};
        DefaultTableModel dtm = new DefaultTableModel() {
            public boolean isCelEditable(int row, int coll) {
                return coll != 1;
            }
        };
        dtm.setColumnIdentifiers(header);
        futureTable.setModel(dtm);

        try {
            importedFutureBookings = viewFuture();
            if (date == null) {
                for (String[][] result : importedFutureBookings) {
                    for (String[] future : result) {
                        dtm.addRow(future);
                        futureTable.setModel(dtm);
                    }
                }
            } else {
                for (String[][] result : importedFutureBookings) {
                    for (String[] future : result) {
                        if (date.equals(future[0])) {
                            dtm.addRow(future);
                            futureTable.setModel(dtm);
                        }
                    }
                }
            }

        } catch (SQLException | ClassNotFoundException ex) {
        }
        Dimension dim = jScrollPane1.getSize();
        int height = (futureTable.getRowCount() * 16) + 26;
        if (height > 420) {
            height = 420;
        }
        jScrollPane1.setSize(dim.width, height);
    }

    private String[][][] viewFuture()
            throws SQLException, ClassNotFoundException {
        Connection con;
        ResultSet rs;
        String query;

        con = Database.getConnected();
        query = "SELECT * FROM bus_turns";
        rs = Database.executeQuery(con, query);

        String futureTurns = "";
        while (rs.next()) {
            if (rs.getInt(8) != 2) {
                futureTurns += rs.getString(7) + " / ";
            }
        }
        futureTurnsArray = futureTurns.split(" / ");
        String[][][] returnData = new String[futureTurnsArray.length][][];

        for (int i = 0; i < futureTurnsArray.length; i++) {
            returnData[i] = getFutureReport(futureTurnsArray[i], customerEmail);
        }
        Database.disconnect(con);
        return returnData;
    }

    public static String[][] getFutureReport(String busTurnId, String customerEmail) {
        String[][] turnData = null;

        try {
            Connection con = Database.getConnected();
            String query;
            query = "SELECT * FROM `" + busTurnId + "` WHERE `email`='" + customerEmail + "'";
            ResultSet rs = Database.executeQuery(con, query);
            int count;
            for (count = 0; rs.next(); count++) {
            }
            rs = Database.executeQuery(con, query);
            turnData = new String[count][7];
            for (int i = 0; rs.next(); i++) {
                turnData[i][0] = rs.getString(3);
                turnData[i][1] = rs.getString(4);
                turnData[i][2] = rs.getString(5);
                turnData[i][3] = rs.getString(6);
                turnData[i][4] = rs.getString(2);
                turnData[i][5] = rs.getString(7);
                turnData[i][6] = rs.getString(1);
            }
            Database.disconnect(con);

            return turnData;
        } catch (SQLException | ClassNotFoundException ex) {
        }
        return turnData;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton deleteBus;
    private javax.swing.JButton editData;
    private javax.swing.JTable futureTable;
    private javax.swing.JButton help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton search;
    private javax.swing.JButton viewAll;
    // End of variables declaration//GEN-END:variables
}
