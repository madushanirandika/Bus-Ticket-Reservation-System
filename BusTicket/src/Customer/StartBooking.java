/**
 * Bus Ticket Reservation System by group C
 */
package Customer;

import Includes.*;
import Login.EditProfile;
import Login.Startup;
import java.awt.Color;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

public class StartBooking extends javax.swing.JFrame {

    private String busTurnIdList;
    private String customerEmail;

    /**
     * This is the main constructor of the Whole program. When an user logged in
     * using his email and password, That email will be sent into here.
     *
     * As well as this constructor use to re_store user's logging data when user
     * pressed back from next screen such as EditFuture.java, ViewHistory.java
     *
     * @param customerEmail
     */
    public StartBooking(String customerEmail) {
        this.customerEmail = customerEmail.toLowerCase();
        initWindow();
        try {
            startEndList(selectStart, Sugessions.startEnd(""));
            startEndList(selectEnd, Sugessions.startEnd(""));
        } catch (SQLException | ClassNotFoundException ex) {
        }

    }

    /**
     * This constructor use to re_display data when user pressed back from next
     * screen, specially from SeatSelecting.java
     *
     * @param args
     */
    public StartBooking(String[] args) {
        if (args != null) {

            this.customerEmail = args[0].toLowerCase();
            initWindow();
            start.setText(args[1]);
            end.setText(args[2]);
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
                Date d = sdf.parse(args[3]);
                travelDate.setDate(d);
            } catch (ParseException ex) {
                Logger.getLogger(StartBooking.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                startEndList(selectStart, Sugessions.startEnd(start.getText()));
                startEndList(selectEnd, Sugessions.startEnd(end.getText()));
            } catch (SQLException | ClassNotFoundException ex) {
            }
            searchABus();
        }
    }

    /**
     * This method includes Standard screen specifications decided by us. These
     * settings are equal in all .java files in this project
     */
    private void initWindow() {
        this.setUndecorated(true);
        initComponents();
        this.setSize(890, 570);
        this.setAlwaysOnTop(true);
        this.setResizable(false);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        initFields();
    }

    /**
     * This method includes initial characteristics of some fields in this
     * interface. This method will be deference from class to class according to
     * it's contents
     */
    private void initFields() {
        this.start.requestFocusInWindow();
        jLabel3.setVisible(false);
        busSugessions.setVisible(false);
        viewBus.setVisible(false);
        Date d = new Date();
        travelDate.setMinSelectableDate(d);
        travelDate.setDateFormatString("yyyy/MM/dd");
        setUserData();
    }

    private void setUserData() {
        try {
            Connection con = Database.getConnected();
            String query = "SELECT * FROM customer_login WHERE email ='" + customerEmail + "'";
            ResultSet rs = Database.executeQuery(con, query);
            rs.next();
            String name = rs.getString(1);
            int gender = rs.getInt(6);
            this.name.setText(name);
            logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/" + gender + ".png")));
        } catch (SQLException | ClassNotFoundException ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        start = new javax.swing.JTextField();
        selectStart = new javax.swing.JComboBox<>();
        end = new javax.swing.JTextField();
        selectEnd = new javax.swing.JComboBox<>();
        viewHistory = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        viewBus = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        searchABus = new javax.swing.JButton();
        busSugessions = new javax.swing.JComboBox<>();
        modify = new javax.swing.JButton();
        interchange = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        travelDate = new com.toedter.calendar.JDateChooser();
        name = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        start.setBackground(new java.awt.Color(153, 255, 0));
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        start.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                startKeyPressed(evt);
            }
        });
        getContentPane().add(start);
        start.setBounds(210, 170, 140, 30);

        selectStart.setBackground(new java.awt.Color(0, 0, 0));
        selectStart.setForeground(new java.awt.Color(255, 255, 255));
        selectStart.setNextFocusableComponent(end);
        selectStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectStartMouseClicked(evt);
            }
        });
        selectStart.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                selectStartKeyPressed(evt);
            }
        });
        getContentPane().add(selectStart);
        selectStart.setBounds(360, 170, 100, 30);

        end.setBackground(new java.awt.Color(153, 255, 102));
        end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endActionPerformed(evt);
            }
        });
        end.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                endKeyPressed(evt);
            }
        });
        getContentPane().add(end);
        end.setBounds(210, 220, 140, 30);

        selectEnd.setBackground(new java.awt.Color(0, 0, 0));
        selectEnd.setForeground(new java.awt.Color(255, 255, 255));
        selectEnd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectEndMouseClicked(evt);
            }
        });
        selectEnd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                selectEndKeyPressed(evt);
            }
        });
        getContentPane().add(selectEnd);
        selectEnd.setBounds(360, 220, 100, 30);

        viewHistory.setBackground(new java.awt.Color(0, 0, 0));
        viewHistory.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        viewHistory.setForeground(new java.awt.Color(102, 255, 0));
        viewHistory.setText("View My History");
        viewHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewHistoryActionPerformed(evt);
            }
        });
        getContentPane().add(viewHistory);
        viewHistory.setBounds(580, 80, 140, 30);

        logOut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        logOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout.jpg"))); // NOI18N
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });
        getContentPane().add(logOut);
        logOut.setBounds(760, 80, 70, 30);

        Clear.setBackground(new java.awt.Color(0, 0, 0));
        Clear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Clear.setForeground(new java.awt.Color(102, 255, 0));
        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        getContentPane().add(Clear);
        Clear.setBounds(70, 500, 90, 30);

        viewBus.setBackground(new java.awt.Color(0, 0, 0));
        viewBus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        viewBus.setForeground(new java.awt.Color(102, 255, 0));
        viewBus.setText("View Selected Bus");
        viewBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBusActionPerformed(evt);
            }
        });
        getContentPane().add(viewBus);
        viewBus.setBounds(210, 430, 160, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("From               :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(70, 170, 140, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("To                   :");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(70, 220, 140, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Date & Time    :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(70, 370, 140, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Booking");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 20, 160, 60);

        searchABus.setBackground(new java.awt.Color(0, 0, 0));
        searchABus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchABus.setForeground(new java.awt.Color(102, 255, 0));
        searchABus.setText("Search A Bus");
        searchABus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchABusActionPerformed(evt);
            }
        });
        getContentPane().add(searchABus);
        searchABus.setBounds(210, 320, 140, 30);

        busSugessions.setBackground(new java.awt.Color(153, 255, 102));
        getContentPane().add(busSugessions);
        busSugessions.setBounds(210, 370, 250, 30);

        modify.setBackground(new java.awt.Color(0, 0, 0));
        modify.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        modify.setForeground(new java.awt.Color(102, 255, 0));
        modify.setText("Modify My Future Journeys");
        modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyActionPerformed(evt);
            }
        });
        getContentPane().add(modify);
        modify.setBounds(350, 80, 200, 30);

        interchange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/interchange.png"))); // NOI18N
        interchange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interchangeActionPerformed(evt);
            }
        });
        getContentPane().add(interchange);
        interchange.setBounds(480, 200, 20, 20);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Date               :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(70, 270, 140, 30);

        travelDate.setBackground(new java.awt.Color(153, 255, 0));
        getContentPane().add(travelDate);
        travelDate.setBounds(210, 270, 140, 30);

        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        name.setText("User Name");
        name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nameMouseExited(evt);
            }
        });
        getContentPane().add(name);
        name.setBounds(350, 40, 400, 30);

        logo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoMouseClicked(evt);
            }
        });
        getContentPane().add(logo);
        logo.setBounds(760, 20, 50, 50);

        jLabel5.setBackground(new java.awt.Color(153, 255, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/02.jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 890, 570);

        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 34, 14);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchABusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchABusActionPerformed
        searchABus();
    }//GEN-LAST:event_searchABusActionPerformed

    /**
     * This method is used to search a bus according to user's requirements.
     */
    private void searchABus() {
        String date = null;
        try {
            Date d = travelDate.getDate();
            date = new SimpleDateFormat("yyyy/MM/dd").format(d);
        } catch (Exception e) {
            //User hasn't entered a date
            JOptionPane.showMessageDialog(this, "Use Calendar button or Manually enter date in fromat YYYY/MM/DD");
        }
        String[] busSugessionList = null;
        try {
            if (date != null) {
                String customerStart = selectStart.getSelectedItem().toString();
                String customerEnd = selectEnd.getSelectedItem().toString();
                end.setText(customerEnd);
                start.setText(customerStart);
                busSugessionList = Sugessions.busList(customerStart, customerEnd, date);
            }
        } catch (SQLException | ClassNotFoundException ex) {
        }
        busTurnIdList = busSugessionList[1];
        if (!"".equals(busSugessionList[0])) {
            jLabel3.setVisible(true);
            busSugessions.setVisible(true);
            viewBus.setVisible(true);
            setBusList(busSugessionList[0]);
        } else {
            JOptionPane.showMessageDialog(this, "Bus Sugessions not found");
            jLabel3.setVisible(false);
            busSugessions.setVisible(false);
            viewBus.setVisible(false);
        }
    }

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        StartBooking x = new StartBooking(customerEmail);
        this.dispose();
    }//GEN-LAST:event_ClearActionPerformed

    private void startKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_startKeyPressed
        try {
            startEndList(selectStart, Sugessions.startEnd(start.getText()));
        } catch (SQLException | ClassNotFoundException ex) {
        }
    }//GEN-LAST:event_startKeyPressed

    private void endKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_endKeyPressed
        try {
            startEndList(selectEnd, Sugessions.startEnd(end.getText()));
        } catch (SQLException | ClassNotFoundException ex) {
        }
    }//GEN-LAST:event_endKeyPressed

    private void selectStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectStartMouseClicked
        start.setText(selectStart.getSelectedItem().toString());
    }//GEN-LAST:event_selectStartMouseClicked

    private void selectEndKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selectEndKeyPressed
        end.setText(selectEnd.getSelectedItem().toString());
    }//GEN-LAST:event_selectEndKeyPressed

    private void selectStartKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selectStartKeyPressed
        start.setText(selectStart.getSelectedItem().toString());
    }//GEN-LAST:event_selectStartKeyPressed

    private void selectEndMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectEndMouseClicked
        end.setText(selectEnd.getSelectedItem().toString());
    }//GEN-LAST:event_selectEndMouseClicked

    private void viewBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBusActionPerformed
        String busTurnId = busTurnIdList.split(" / ")[busSugessions.getSelectedIndex()];
        int isFilled = 0;
        Date d = travelDate.getDate();
        String date = new SimpleDateFormat("yyyy/MM/dd").format(d);
        try {
            Connection con = Database.getConnected();
            String query = "SELECT * FROM `bus_turns` WHERE `bus_turn_id`='"
                    + busTurnId
                    + "'";
            ResultSet rs = Database.executeQuery(con, query);
            rs.next();
            isFilled = rs.getInt(8);
        } catch (SQLException | ClassNotFoundException ex) {
        }
        switch (isFilled) {
            case 0:
                String[] args = {customerEmail, start.getText(), end.getText(), busTurnId, date};
                SeatSelecting x = new SeatSelecting(args);
                x.setSize(this.getSize());
                x.setVisible(true);
                this.setVisible(false);
                break;
            case 1:
                JOptionPane.showMessageDialog(this, "All seats of this bus were "
                        + "filled. Please try another one");
                break;
            case 2:
                JOptionPane.showMessageDialog(this, "This bus turn was finalized "
                        + "by the Admin and now you cant book seats on it.");
                break;
        }
    }//GEN-LAST:event_viewBusActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        Startup x = new Startup();
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logOutActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startActionPerformed

    private void viewHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewHistoryActionPerformed
        ViewHistory x = new ViewHistory(customerEmail);
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_viewHistoryActionPerformed

    private void interchangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interchangeActionPerformed
        String s = start.getText();
        start.setText(end.getText());
        end.setText(s);
        try {
            startEndList(selectStart, Sugessions.startEnd(start.getText()));
            startEndList(selectEnd, Sugessions.startEnd(end.getText()));
        } catch (SQLException | ClassNotFoundException ex) {
        }
        searchABusActionPerformed(evt);
    }//GEN-LAST:event_interchangeActionPerformed

    private void modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyActionPerformed
        EditFuture x = new EditFuture(customerEmail);
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_modifyActionPerformed

    private void endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endActionPerformed

    }//GEN-LAST:event_endActionPerformed

    private void nameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameMouseEntered
        name.setForeground(Color.red);
    }//GEN-LAST:event_nameMouseEntered

    private void nameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameMouseExited
        name.setForeground(Color.white);
    }//GEN-LAST:event_nameMouseExited

    private void nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameMouseClicked
        EditProfile x = new EditProfile(customerEmail);
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_nameMouseClicked

    private void logoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoMouseClicked
        nameMouseClicked(evt);
    }//GEN-LAST:event_logoMouseClicked

    private void startEndList(JComboBox sugBox, String sugessions) {
        String[] sugList = sugessions.split(" / ");

        sugBox.removeAllItems();
        for (int i = 0; i < sugList.length; i++) {
            String checkingHalt = sugList[i];
            if (!checkingHalt.equals("?")) {
                for (int j = i + 1; j < sugList.length; j++) {
                    if (checkingHalt.equals(sugList[j])) {
                        sugList[j] = "?";
                    }
                }
            }
        }

        for (String sugList1 : sugList) {
            if (!sugList1.equals("?")) {
                sugBox.addItem(sugList1);
            }
        }
    }

    private void setBusList(String sugessions) {

        String[] sugList = sugessions.split(" / ");
        busSugessions.removeAllItems();
        for (String sugList1 : sugList) {
            busSugessions.addItem(sugList1);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JComboBox<String> busSugessions;
    private javax.swing.JTextField end;
    private javax.swing.JButton interchange;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton logOut;
    private javax.swing.JLabel logo;
    private javax.swing.JButton modify;
    private javax.swing.JLabel name;
    private javax.swing.JButton searchABus;
    private javax.swing.JComboBox<String> selectEnd;
    private javax.swing.JComboBox<String> selectStart;
    private javax.swing.JTextField start;
    private com.toedter.calendar.JDateChooser travelDate;
    private javax.swing.JButton viewBus;
    private javax.swing.JButton viewHistory;
    // End of variables declaration//GEN-END:variables
}
